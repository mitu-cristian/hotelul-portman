{"ast":null,"code":"var _jsxFileName = \"D:\\\\Portman Hotel copy\\\\frontend\\\\src\\\\components\\\\Reserve\\\\Reserve.jsx\",\n  _s = $RefreshSig$();\nimport \"./reserve.css\";\nimport { toast } from \"react-toastify\";\n\n// React general\nimport { useState, useEffect } from \"react\";\n\n// Redux general\nimport { useSelector, useDispatch } from \"react-redux\";\n\n// Redux from booking store\nimport { resetFo, getSingleRoom, addReservation } from \"../../features/booking/bookingSlice\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Reserve(_ref) {\n  _s();\n  let {\n    setOpen,\n    roomId\n  } = _ref;\n  const {\n    form,\n    rooms,\n    isLoadingFo,\n    isSuccessFo,\n    messageFo\n  } = useSelector(state => state.booking);\n  const {\n    user\n  } = useSelector(state => state.auth);\n  const dispatch = useDispatch();\n  const [selectedRooms, setSelectedRooms] = useState([]);\n  useEffect(() => {\n    if (isSuccessFo && messageFo) toast.success(messageFo);\n  }, [dispatch, isSuccessFo, messageFo]);\n  const getDatesInRange = (startDate, endDate) => {\n    const start = new Date(startDate);\n    const end = new Date(endDate);\n    const date = new Date(start.getTime());\n    let list = [];\n    while (date <= end) {\n      list.push(new Date(date).getTime());\n      date.setDate(date.getDate() + 1);\n    }\n    return list;\n  };\n  const startDateLS = JSON.parse(localStorage.getItem(\"startDate\"));\n  const endDateLS = JSON.parse(localStorage.getItem(\"endDate\"));\n  const allDates = getDatesInRange(startDateLS, endDateLS);\n  const isAvailable = roomNumber => {\n    const unavailableDatesModified = [];\n    for (let i = 0; i < roomNumber.unavailableDates.length; i = i + 1) unavailableDatesModified.push(new Date(roomNumber.unavailableDates[i]).getTime());\n\n    // console.log(\"allDatesLength\", allDates.length)\n    // console.log(\"unavailableMofidiedLength\", unavailableDatesModified.length)\n\n    let available = true;\n    let k = 0;\n    while (k < allDates.length && available === true) {\n      let j = 0;\n      while (j < unavailableDatesModified.length && available === true) {\n        // console.log(`allDates k = ${k}`, allDates[k])\n        // console.log(`unavailableDates j = ${j}`, unavailableDatesModified[j])\n        if (allDates[k] === unavailableDatesModified[j]) {\n          available = false;\n          // console.log(\"available din interiorul if-ului\", available)\n        }\n        // console.log(\"Rezultatul este: \", available)\n        // console.log(\"\")\n        j = j + 1;\n      }\n      k = k + 1;\n    }\n    return available;\n  };\n  const handleSelect = e => {\n    const checked = e.target.checked;\n    const value = e.target.value;\n    setSelectedRooms(checked ? [...selectedRooms, value] : selectedRooms.filter(item => item !== value));\n  };\n  const handleClick = async () => {\n    await Promise.all(selectedRooms.map(roomId => {\n      const userData = {\n        roomId,\n        \"form\": {\n          \"adults\": JSON.parse(localStorage.getItem(\"adults\")),\n          \"children\": JSON.parse(localStorage.getItem(\"children\")),\n          \"start\": JSON.parse(localStorage.getItem(\"startDate\")),\n          \"end\": JSON.parse(localStorage.getItem(\"endDate\"))\n        }\n      };\n      // console.log(userData)\n      setOpen(false);\n      dispatch(addReservation(userData));\n    }));\n  };\n  const checkValidity = () => {\n    if (selectedRooms.length > 0) return true;else return false;\n  };\n  if (isLoadingFo) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 104,\n    columnNumber: 16\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"reserve\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"rContainer\",\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"Alege num\\u0103rul camerei\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 9\n    }, this), rooms.roomNumbers.map(roomNumber => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"room\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\" \", roomNumber.number, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        id: \"checkbox\",\n        value: roomNumber._id,\n        onChange: handleSelect,\n        disabled: !isAvailable(roomNumber)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 17\n      }, this)]\n    }, roomNumber._id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 13\n    }, this)), user && /*#__PURE__*/_jsxDEV(\"button\", {\n      disabled: checkValidity() === true ? false : true,\n      className: \"button-86\",\n      onClick: handleClick,\n      children: \"Rezerv\\u0103\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 18\n    }, this), !user && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Doar utilizatorii care s-au \\xEEnregistrat pot rezerva online un sejur.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 19\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 107,\n    columnNumber: 5\n  }, this);\n}\n_s(Reserve, \"TgGuONbMnInRpS3uhpMMxgBzKf8=\", false, function () {\n  return [useSelector, useSelector, useDispatch];\n});\n_c = Reserve;\nexport default Reserve;\nvar _c;\n$RefreshReg$(_c, \"Reserve\");","map":{"version":3,"names":["toast","useState","useEffect","useSelector","useDispatch","resetFo","getSingleRoom","addReservation","jsxDEV","_jsxDEV","Reserve","_ref","_s","setOpen","roomId","form","rooms","isLoadingFo","isSuccessFo","messageFo","state","booking","user","auth","dispatch","selectedRooms","setSelectedRooms","success","getDatesInRange","startDate","endDate","start","Date","end","date","getTime","list","push","setDate","getDate","startDateLS","JSON","parse","localStorage","getItem","endDateLS","allDates","isAvailable","roomNumber","unavailableDatesModified","i","unavailableDates","length","available","k","j","handleSelect","e","checked","target","value","filter","item","handleClick","Promise","all","map","userData","checkValidity","children","fileName","_jsxFileName","lineNumber","columnNumber","className","roomNumbers","number","type","id","_id","onChange","disabled","onClick","_c","$RefreshReg$"],"sources":["D:/Portman Hotel copy/frontend/src/components/Reserve/Reserve.jsx"],"sourcesContent":["import \"./reserve.css\";\r\nimport {toast} from \"react-toastify\";\r\n\r\n// React general\r\nimport {useState, useEffect} from \"react\";\r\n\r\n// Redux general\r\nimport {useSelector, useDispatch} from \"react-redux\";\r\n\r\n// Redux from booking store\r\nimport {resetFo, getSingleRoom, addReservation} from \"../../features/booking/bookingSlice\";\r\n\r\nfunction Reserve({setOpen, roomId}) {\r\n    \r\n    const {form, rooms, isLoadingFo, isSuccessFo, messageFo} = useSelector((state) => state.booking)\r\n    const {user} = useSelector((state) => state.auth)\r\n    const dispatch = useDispatch();\r\n\r\n    const [selectedRooms, setSelectedRooms] = useState([])\r\n\r\n    useEffect(() => {\r\n        if(isSuccessFo && messageFo)\r\n            toast.success(messageFo)\r\n    }, [dispatch, isSuccessFo, messageFo])\r\n\r\n    const getDatesInRange = (startDate, endDate) => {\r\n        const start = new Date(startDate);\r\n        const end = new Date(endDate);\r\n        const date = new Date(start.getTime())\r\n        let list = [];\r\n\r\n        while(date <= end) {\r\n            list.push(new Date(date).getTime())\r\n            date.setDate(date.getDate()+1)\r\n        }\r\n        return list;\r\n    }\r\n\r\n    const startDateLS = JSON.parse(localStorage.getItem(\"startDate\"));\r\n    const endDateLS = JSON.parse(localStorage.getItem(\"endDate\"));\r\n\r\n    const allDates = getDatesInRange(startDateLS, endDateLS)\r\n    \r\n    const isAvailable = (roomNumber) => {\r\n        const unavailableDatesModified = []\r\n        for(let i = 0; i < roomNumber.unavailableDates.length; i = i + 1)\r\n        unavailableDatesModified.push(new Date(roomNumber.unavailableDates[i]).getTime() )\r\n\r\n        // console.log(\"allDatesLength\", allDates.length)\r\n        // console.log(\"unavailableMofidiedLength\", unavailableDatesModified.length)\r\n\r\n        let available = true;\r\n        let k = 0;\r\n        while (k < allDates.length && available === true) {\r\n            let j = 0;\r\n            while (j < unavailableDatesModified.length && available === true) {\r\n                // console.log(`allDates k = ${k}`, allDates[k])\r\n                // console.log(`unavailableDates j = ${j}`, unavailableDatesModified[j])\r\n                if(allDates[k] === unavailableDatesModified[j]) {\r\n                    available = false\r\n                    // console.log(\"available din interiorul if-ului\", available)\r\n                }\r\n                // console.log(\"Rezultatul este: \", available)\r\n                // console.log(\"\")\r\n                j = j + 1;\r\n            }\r\n            k = k + 1;\r\n        }\r\n        return available;  \r\n    }\r\n\r\n\r\n    const handleSelect = (e) => {\r\n        const checked = e.target.checked;\r\n        const value = e.target.value;\r\n        setSelectedRooms(checked ? [...selectedRooms, value] : selectedRooms.filter(item => item !== value)) \r\n    }\r\n\r\n    const handleClick = async () => {\r\n            await Promise.all(selectedRooms.map((roomId) => {\r\n               const userData = {\r\n                    roomId, \"form\" : {\r\n                        \"adults\": JSON.parse(localStorage.getItem(\"adults\")),\r\n                        \"children\": JSON.parse(localStorage.getItem(\"children\")),\r\n                        \"start\": JSON.parse(localStorage.getItem(\"startDate\")),\r\n                        \"end\": JSON.parse(localStorage.getItem(\"endDate\"))\r\n                    }\r\n                }\r\n                // console.log(userData)\r\n                setOpen(false);\r\n                dispatch(addReservation(userData))\r\n            }))\r\n        \r\n    }\r\n\r\n    const checkValidity = () => {\r\n        if(selectedRooms.length > 0)\r\n            return true;\r\n        else\r\n            return false;\r\n    }\r\n\r\n    if(isLoadingFo)\r\n        return <div>Loading...</div>\r\n\r\n  return (\r\n    <div className=\"reserve\">\r\n        <div className=\"rContainer\">\r\n            {/* <FontAwesomeIcon icon={faCircleXmark} className=\"rClose\" onClick={() => setOpen(false)}/> */}\r\n            <span>Alege numărul camerei</span>\r\n        </div>\r\n        {rooms.roomNumbers.map(roomNumber => (\r\n            <div className=\"room\" key={roomNumber._id}>\r\n                <label> {roomNumber.number} </label>\r\n                <input type=\"checkbox\" id=\"checkbox\" value={roomNumber._id} onChange={handleSelect} \r\n                disabled={!isAvailable(roomNumber)}\r\n                />\r\n            </div>\r\n        ))}\r\n        {user && <button disabled = {checkValidity() === true ? false : true} className=\"button-86\" onClick={handleClick}>Rezervă</button>}\r\n        {!user && <p>Doar utilizatorii care s-au înregistrat pot rezerva online un sejur.</p>}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Reserve\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}