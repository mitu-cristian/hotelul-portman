{"ast":null,"code":"var _jsxFileName = \"D:\\\\portman-hotel\\\\frontend\\\\src\\\\pages\\\\Me.jsx\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\n\n// Redux\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { getMe, reset } from \"../features/user/userSlice\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Me() {\n  _s();\n  const [updateUserInfo, setUpdateUserInfo] = useState(true);\n  const {\n    firstname,\n    lastname,\n    email\n  } = formData;\n  const dispatch = useDispatch();\n  const {\n    user,\n    isLoading,\n    isError,\n    isSuccess,\n    message\n  } = useSelector(state => state.user);\n  const [formData, setFormData] = useState({\n    firstname: user.firstname || \"\",\n    lastname: user.lastname || \"\",\n    email: user.email || \"\"\n  });\n  useEffect(() => {\n    dispatch(getMe());\n  }, []);\n  const onChange = e => {\n    setFormData(prevState => ({\n      ...prevState,\n      [e.target.name]: e.target.value\n    }));\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      children: /*#__PURE__*/_jsxDEV(\"fieldset\", {\n        disabled: updateUserInfo,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"firstname\",\n          name: \"firstname\",\n          value: firstname,\n          placeholder: \"firstname\",\n          onChange: onChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"lastname\",\n          name: \"lastname\",\n          value: lastname,\n          placeholder: \"lastname\",\n          onChange: onChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          id: \"email\",\n          name: \"email\",\n          value: email,\n          placeholder: \"email\",\n          onChange: onChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }, this), !updateUserInfo && /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 31\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setUpdateUserInfo(!updateUserInfo),\n      children: \"Update your user information\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}\n_s(Me, \"I27ISQ4weBlhwOgWty9gPnUUuP4=\", false, function () {\n  return [useDispatch, useSelector];\n});\n_c = Me;\nexport default Me;\nvar _c;\n$RefreshReg$(_c, \"Me\");","map":{"version":3,"names":["useState","useEffect","useSelector","useDispatch","getMe","reset","jsxDEV","_jsxDEV","Fragment","_Fragment","Me","_s","updateUserInfo","setUpdateUserInfo","firstname","lastname","email","formData","dispatch","user","isLoading","isError","isSuccess","message","state","setFormData","onChange","e","prevState","target","name","value","children","disabled","type","id","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["D:/portman-hotel/frontend/src/pages/Me.jsx"],"sourcesContent":["import {useState, useEffect} from \"react\";\r\n\r\n// Redux\r\nimport {useSelector, useDispatch} from \"react-redux\";\r\nimport {getMe, reset} from \"../features/user/userSlice\";\r\n\r\nfunction Me() {\r\n  const [updateUserInfo, setUpdateUserInfo] = useState(true)\r\n  const {firstname, lastname, email} = formData;\r\n  const dispatch = useDispatch();\r\n  const {user, isLoading, isError, isSuccess, message} = useSelector((state) => state.user)\r\n    const [formData, setFormData] = useState({\r\n      firstname: user.firstname || \"\",\r\n      lastname: user.lastname || \"\",\r\n      email: user.email || \"\"\r\n    })\r\n  \r\n  useEffect(() => {\r\n    dispatch(getMe())\r\n  }, [])\r\n\r\n  const onChange = (e) => {\r\n    setFormData((prevState) => ({\r\n      ...prevState,\r\n      [e.target.name]: e.target.value\r\n    }))\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <form>\r\n        <fieldset disabled = {updateUserInfo}>\r\n          <input type=\"text\" id=\"firstname\" name=\"firstname\" value={firstname} placeholder=\"firstname\" onChange={onChange}  />\r\n          <input type=\"text\" id=\"lastname\" name=\"lastname\" value={lastname} placeholder=\"lastname\" onChange={onChange} />\r\n          <input type=\"email\" id=\"email\" name=\"email\" value={email} placeholder=\"email\" onChange={onChange} />\r\n          {!updateUserInfo && <button type=\"submit\">Submit</button>}\r\n        </fieldset>\r\n      </form>\r\n        <button onClick = {() => setUpdateUserInfo(!updateUserInfo)}>Update your user information</button>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Me\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}