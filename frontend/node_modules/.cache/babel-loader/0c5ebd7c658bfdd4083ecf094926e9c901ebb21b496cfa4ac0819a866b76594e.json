{"ast":null,"code":"import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport userService from \"./userService\";\nconst initialState = {\n  userMe: null,\n  reviewMe: null,\n  isErrorMe: false,\n  isSuccessMe: false,\n  isLoadingMe: false,\n  messageMe: \"\"\n};\n\n// Get me\nexport const getMe = createAsyncThunk(\"user/getMe\", async thunkAPI => {\n  try {\n    return await userService.getMe();\n  } catch (error) {\n    const message = error.response.data.error;\n    return thunkAPI.rejectWithValue(message);\n  }\n});\n\n// Update my user\nexport const updateMe = createAsyncThunk(\"user/updateMe\", async (userData, thunkAPI) => {\n  try {\n    return await userService.updateMe(userData);\n  } catch (error) {\n    const message = error.response.data.error;\n    return thunkAPI.rejectWithValue(message);\n  }\n});\n\n// Update password\nexport const updatePass = createAsyncThunk(\"user/updatePass\", async (userData, thunkAPI) => {\n  try {\n    return await userService.updatePass(userData);\n  } catch (error) {\n    const message = error.response.data.error;\n    return thunkAPI.rejectWithValue(message);\n  }\n});\n\n// See my review\nexport const getMyReview = createAsyncThunk(\"user/getReview\", async thunkAPI => {\n  try {\n    return await userService.getMyReview();\n  } catch (error) {\n    const message = error.response.data.error || error.response && error.response.data && error.response.data.message || error.message || error.toString();\n    return thunkAPI.rejectWithValue(message);\n  }\n});\n\n// Delete my review\nexport const deleteMyReview = createAsyncThunk(\"user/deleteReview\", async thunkAPI => {\n  try {\n    return await userService.deleteMyReview();\n  } catch (error) {\n    const message = error.response && error.response.data && error.response.data.message || error.message || error.toString();\n    return thunkAPI.rejectWithValue(message);\n  }\n});\nexport const userSlice = createSlice({\n  name: \"userMe\",\n  initialState,\n  reducers: {\n    resetMe: state => {\n      state.isErrorMe = false;\n      state.isSuccessMe = false;\n      state.isLoadingMe = false;\n      state.messageMe = \"\";\n    }\n  },\n  extraReducers: builder => {\n    builder\n\n    // Get me\n    .addCase(getMe.pending, state => {\n      state.isLoadingMe = true;\n    }).addCase(getMe.fulfilled, (state, action) => {\n      state.isLoadingMe = false;\n      state.isSuccessMe = true;\n      state.userMe = action.payload;\n    }).addCase(getMe.rejected, (state, action) => {\n      state.isLoadingMe = false;\n      state.isErrorMe = true;\n      state.messageMe = action.payload;\n      state.userMe = null;\n    })\n\n    // Update me\n    .addCase(updateMe.pending, state => {\n      state.isLoadingMe = true;\n    }).addCase(updateMe.fulfilled, (state, action) => {\n      state.isLoadingMe = false;\n      state.isSuccessMe = true;\n      state.messageMe = action.payload;\n    }).addCase(updateMe.rejected, (state, action) => {\n      state.isLoadingMe = false;\n      state.isErrorMe = true;\n      state.messageMe = action.payload;\n    })\n\n    // Update pass\n    .addCase(updatePass.pending, state => {\n      state.isLoadingMe = true;\n    }).addCase(updatePass.fulfilled, (state, action) => {\n      state.isLoadingMe = false;\n      state.isSuccessMe = true;\n      state.messageMe = action.payload;\n    }).addCase(updatePass.rejected, (state, action) => {\n      state.isLoadingMe = false;\n      state.isErrorMe = true;\n      state.messageMe = action.payload;\n    })\n\n    // See my review\n    .addCase(getMyReview.pending, state => {\n      state.isLoadingMe = true;\n    }).addCase(getMyReview.rejected, (state, action) => {\n      state.isLoadingMe = false;\n      state.messageMe = action.payload;\n      state.isErrorMe = true;\n    }).addCase(getMyReview.fulfilled, (state, action) => {\n      state.isLoadingMe = false;\n      state.reviewMe = action.payload;\n    })\n\n    // Delete my review\n    .addCase(deleteMyReview.rejected, (state, action) => {\n      state.messageMe = action.payload;\n      state.isErrorMe = true;\n    }).addCase(deleteMyReview.fulfilled, (state, action) => {\n      state.messageMe = action.payload;\n      state.isSuccessMe = true;\n      state.reviewMe = null;\n    });\n  }\n});\nexport const {\n  resetMe\n} = userSlice.actions;\nexport default userSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","userService","initialState","userMe","reviewMe","isErrorMe","isSuccessMe","isLoadingMe","messageMe","getMe","thunkAPI","error","message","response","data","rejectWithValue","updateMe","userData","updatePass","getMyReview","toString","deleteMyReview","userSlice","name","reducers","resetMe","state","extraReducers","builder","addCase","pending","fulfilled","action","payload","rejected","actions","reducer"],"sources":["D:/portman-hotel/frontend/src/features/user/userSlice.js"],"sourcesContent":["import {createSlice, createAsyncThunk} from \"@reduxjs/toolkit\";\r\nimport userService from \"./userService\";\r\n\r\nconst initialState = {\r\n    userMe: null,\r\n    reviewMe: null,\r\n    isErrorMe: false,\r\n    isSuccessMe: false,\r\n    isLoadingMe: false,\r\n    messageMe: \"\"\r\n}\r\n\r\n// Get me\r\nexport const getMe = createAsyncThunk(\"user/getMe\", async(thunkAPI) => {\r\n    try {\r\n        return await userService.getMe();\r\n    }\r\n    catch(error) {\r\n        const message = error.response.data.error;\r\n        return thunkAPI.rejectWithValue(message);\r\n    }\r\n})\r\n\r\n// Update my user\r\nexport const updateMe = createAsyncThunk(\"user/updateMe\", async(userData, thunkAPI) => {\r\n    try {\r\n        return await userService.updateMe(userData)\r\n    }\r\n    catch(error) {\r\n        const message = error.response.data.error;\r\n        return thunkAPI.rejectWithValue(message);\r\n    }\r\n})\r\n\r\n// Update password\r\nexport const updatePass = createAsyncThunk(\"user/updatePass\", async(userData, thunkAPI) => {\r\n    try {\r\n        return await userService.updatePass(userData);\r\n    }\r\n\r\n    catch(error) {\r\n        const message = error.response.data.error;\r\n        return thunkAPI.rejectWithValue(message);\r\n    }\r\n})\r\n\r\n// See my review\r\nexport const getMyReview = createAsyncThunk(\"user/getReview\", async (thunkAPI) => {\r\n    try {\r\n        return await userService.getMyReview();\r\n    }\r\n\r\n    catch(error) {\r\n        const message = error.response.data.error || (error.response && error.response.data && error.response.data.message) || error.message || error.toString()\r\n        return thunkAPI.rejectWithValue(message);\r\n    }\r\n})\r\n\r\n// Delete my review\r\nexport const deleteMyReview = createAsyncThunk(\"user/deleteReview\", async (thunkAPI) => {\r\n    try {\r\n        return await userService.deleteMyReview();\r\n    }\r\n\r\n    catch(error) {\r\n        const message = (error.response && error.response.data && error.response.data.message) || error.message || error.toString()\r\n        return thunkAPI.rejectWithValue(message);\r\n    }\r\n})\r\n\r\nexport const userSlice = createSlice({\r\n    name: \"userMe\",\r\n    initialState,\r\n    reducers: {\r\n        resetMe: (state) => {\r\n            state.isErrorMe = false;\r\n            state.isSuccessMe = false;\r\n            state.isLoadingMe = false;\r\n            state.messageMe = \"\";\r\n        }\r\n    },\r\n    extraReducers: (builder) => {\r\n        builder\r\n\r\n    // Get me\r\n            .addCase(getMe.pending, (state) => {\r\n                state.isLoadingMe = true;\r\n            })\r\n            .addCase(getMe.fulfilled, (state, action) => {\r\n                state.isLoadingMe = false;\r\n                state.isSuccessMe = true;\r\n                state.userMe = action.payload;\r\n            })\r\n            .addCase(getMe.rejected, (state, action) => {\r\n                state.isLoadingMe = false;\r\n                state.isErrorMe = true;\r\n                state.messageMe = action.payload;\r\n                state.userMe = null;\r\n            })\r\n\r\n    // Update me\r\n            .addCase(updateMe.pending, (state) => {\r\n                state.isLoadingMe = true;\r\n            })\r\n            .addCase(updateMe.fulfilled, (state, action) => {\r\n                state.isLoadingMe = false;\r\n                state.isSuccessMe = true;\r\n                state.messageMe = action.payload;\r\n            })\r\n            .addCase(updateMe.rejected, (state, action) => {\r\n                state.isLoadingMe = false;\r\n                state.isErrorMe = true;\r\n                state.messageMe = action.payload;\r\n            })\r\n    \r\n    // Update pass\r\n            .addCase(updatePass.pending, (state) => {\r\n                state.isLoadingMe = true;\r\n            })\r\n            .addCase(updatePass.fulfilled, (state, action) => {\r\n                state.isLoadingMe = false;\r\n                state.isSuccessMe = true;\r\n                state.messageMe = action.payload;\r\n            })\r\n            .addCase(updatePass.rejected, (state, action) => {\r\n                state.isLoadingMe = false;\r\n                state.isErrorMe = true;\r\n                state.messageMe = action.payload;\r\n            })\r\n\r\n    // See my review\r\n            .addCase(getMyReview.pending, (state) => {\r\n                state.isLoadingMe = true;\r\n            })\r\n            .addCase(getMyReview.rejected, (state, action) => {\r\n                state.isLoadingMe = false;\r\n                state.messageMe = action.payload;\r\n                state.isErrorMe = true;\r\n            })\r\n            .addCase(getMyReview.fulfilled, (state, action) => {\r\n                state.isLoadingMe = false;\r\n                state.reviewMe = action.payload;\r\n            })\r\n            \r\n    // Delete my review\r\n            .addCase(deleteMyReview.rejected, (state, action) => {\r\n                state.messageMe = action.payload;\r\n                state.isErrorMe = true;                \r\n            })\r\n            .addCase(deleteMyReview.fulfilled, (state, action) => {\r\n                state.messageMe = action.payload;\r\n                state.isSuccessMe = true;\r\n                state.reviewMe = null;\r\n            })\r\n    }\r\n})\r\n\r\nexport const {resetMe} = userSlice.actions;\r\nexport default userSlice.reducer;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}