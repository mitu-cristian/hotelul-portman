{"ast":null,"code":"var _jsxFileName = \"D:\\\\portman-hotel\\\\frontend\\\\src\\\\components\\\\Reserve\\\\Reserve.jsx\",\n  _s = $RefreshSig$();\nimport \"./reserve.css\";\nimport { toast } from \"react-toastify\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faCircleXmark } from \"@fortawesome/free-solid-svg-icons\";\n\n// React general\nimport { useState, useEffect } from \"react\";\n\n// Redux general\nimport { useSelector, useDispatch } from \"react-redux\";\n\n// Redux from booking store\nimport { resetFo, getSingleRoom, addReservation } from \"../../features/booking/bookingSlice\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Reserve(_ref) {\n  _s();\n  let {\n    setOpen,\n    roomId\n  } = _ref;\n  const {\n    form,\n    rooms,\n    isLoadingFo,\n    isSuccessFo,\n    messageFo\n  } = useSelector(state => state.booking);\n  const dispatch = useDispatch();\n  const [selectedRooms, setSelectedRooms] = useState([]);\n  useEffect(() => {\n    if (isSuccessFo && messageFo) toast.success(messageFo);\n  }, [dispatch, isSuccessFo, messageFo]);\n  const getDatesInRange = (startDate, endDate) => {\n    const start = new Date(startDate);\n    const end = new Date(endDate);\n    const date = new Date(start.getTime());\n    let list = [];\n    while (date <= end) {\n      list.push(new Date(date).getTime());\n      date.setDate(date.getDate() + 1);\n    }\n    return list;\n  };\n  const allDates = getDatesInRange(form.start, form.end);\n  const isAvailable = roomNumber => {\n    const unavailableDatesModified = [];\n    for (let i = 0; i < roomNumber.unavailableDates.length; i = i + 1) unavailableDatesModified.push(new Date(roomNumber.unavailableDates[i]).getTime() - 3 * 60 * 60 * 1000);\n    // console.log(\"Datele indisponibile din functie sunt: \", unavailableDatesModified)\n    let available = true;\n    let k = 0;\n    let j = 0;\n    while (k < allDates.length && available === true) {\n      while (j < unavailableDatesModified.length && available === true) {\n        console.log(\"allDates\", allDates[k]);\n        console.log(\"unavailableDates\", unavailableDatesModified[j]);\n        if (allDates[k] === unavailableDatesModified[j]) {\n          available = false;\n          // console.log(available)\n          // console.log(new Date(allDates[i])) \n          // console.log(new Date(unavailableDatesModified[j]))\n        }\n\n        console.log(\"Rezultatul este: \", available);\n        console.log(\"\");\n        j = j + 1;\n      }\n      k = k + 1;\n    }\n    return available;\n  };\n  // console.log(\"Functia a returnat valoarea: \", isAvailable(rooms.roomNumbers[1]))\n  console.log(isAvailable(rooms.roomNumbers[1]));\n  // const unavailableDatesModified = []\n  //     for(let i = 0; i < rooms.roomNumbers[1].unavailableDates.length; i = i + 1)\n  //     unavailableDatesModified.push(new Date(rooms.roomNumbers[1].unavailableDates[i]).getTime() - 3*60*60*1000)\n\n  // console.log(allDates[1] === unavailableDatesModified[0])\n  // console.log(\"alldDates\", allDates[1])\n  // console.log(\"unavailableModifiedDates\", unavailableDatesModified[0])\n\n  const handleSelect = e => {\n    const checked = e.target.checked;\n    const value = e.target.value;\n    setSelectedRooms(checked ? [...selectedRooms, value] : selectedRooms.filter(item => item !== value));\n  };\n  const handleClick = async () => {\n    await Promise.all(selectedRooms.map(roomId => {\n      const userData = {\n        roomId,\n        form\n      };\n      dispatch(addReservation(userData));\n    }));\n  };\n  if (isLoadingFo) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 95,\n    columnNumber: 16\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"reserve\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"rContainer\",\n      children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n        icon: faCircleXmark,\n        className: \"rClose\",\n        onClick: () => setOpen(false)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"Select your rooms:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 9\n    }, this), rooms.roomNumbers.map(roomNumber => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"room\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\" \", roomNumber.number, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        value: roomNumber._id,\n        onChange: handleSelect\n        // disabled={!isAvailable(roomNumber)}\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 17\n      }, this)]\n    }, roomNumber._id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 13\n    }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleClick,\n      children: \"Reserve now!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 98,\n    columnNumber: 5\n  }, this);\n}\n_s(Reserve, \"lPZGYSoj++v8JP9QGV2qnYtEOac=\", false, function () {\n  return [useSelector, useDispatch];\n});\n_c = Reserve;\nexport default Reserve;\nvar _c;\n$RefreshReg$(_c, \"Reserve\");","map":{"version":3,"names":["toast","FontAwesomeIcon","faCircleXmark","useState","useEffect","useSelector","useDispatch","resetFo","getSingleRoom","addReservation","jsxDEV","_jsxDEV","Reserve","_ref","_s","setOpen","roomId","form","rooms","isLoadingFo","isSuccessFo","messageFo","state","booking","dispatch","selectedRooms","setSelectedRooms","success","getDatesInRange","startDate","endDate","start","Date","end","date","getTime","list","push","setDate","getDate","allDates","isAvailable","roomNumber","unavailableDatesModified","i","unavailableDates","length","available","k","j","console","log","roomNumbers","handleSelect","e","checked","target","value","filter","item","handleClick","Promise","all","map","userData","children","fileName","_jsxFileName","lineNumber","columnNumber","className","icon","onClick","number","type","_id","onChange","_c","$RefreshReg$"],"sources":["D:/portman-hotel/frontend/src/components/Reserve/Reserve.jsx"],"sourcesContent":["import \"./reserve.css\";\r\nimport {toast} from \"react-toastify\";\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\nimport {faCircleXmark} from \"@fortawesome/free-solid-svg-icons\";\r\n\r\n// React general\r\nimport {useState, useEffect} from \"react\";\r\n\r\n// Redux general\r\nimport {useSelector, useDispatch} from \"react-redux\";\r\n\r\n// Redux from booking store\r\nimport {resetFo, getSingleRoom, addReservation} from \"../../features/booking/bookingSlice\";\r\n\r\nfunction Reserve({setOpen, roomId}) {\r\n    \r\n    const {form, rooms, isLoadingFo, isSuccessFo, messageFo} = useSelector((state) => state.booking)\r\n    const dispatch = useDispatch();\r\n\r\n    const [selectedRooms, setSelectedRooms] = useState([])\r\n\r\n    useEffect(() => {\r\n        if(isSuccessFo && messageFo)\r\n            toast.success(messageFo)\r\n    }, [dispatch, isSuccessFo, messageFo])\r\n\r\n    const getDatesInRange = (startDate, endDate) => {\r\n        const start = new Date(startDate);\r\n        const end = new Date(endDate);\r\n        const date = new Date(start.getTime())\r\n        let list = [];\r\n\r\n        while(date <= end) {\r\n            list.push(new Date(date).getTime())\r\n            date.setDate(date.getDate()+1)\r\n        }\r\n        return list;\r\n    }\r\n\r\n    const allDates = getDatesInRange(form.start, form.end)\r\n    \r\n    const isAvailable = (roomNumber) => {\r\n        const unavailableDatesModified = []\r\n        for(let i = 0; i < roomNumber.unavailableDates.length; i = i + 1)\r\n        unavailableDatesModified.push(new Date(roomNumber.unavailableDates[i]).getTime() - 3*60*60*1000)\r\n        // console.log(\"Datele indisponibile din functie sunt: \", unavailableDatesModified)\r\n        let available = true;\r\n        let k = 0;\r\n        let j = 0;\r\n        while (k < allDates.length && available === true) {\r\n            while (j < unavailableDatesModified.length && available === true) {\r\n                console.log(\"allDates\", allDates[k])\r\n                console.log(\"unavailableDates\", unavailableDatesModified[j])\r\n                if(allDates[k] === unavailableDatesModified[j]) {\r\n                    available = false\r\n                    // console.log(available)\r\n                    // console.log(new Date(allDates[i])) \r\n                    // console.log(new Date(unavailableDatesModified[j]))\r\n                }\r\n                console.log(\"Rezultatul este: \", available)\r\n                console.log(\"\")\r\n                j = j + 1;\r\n            }\r\n            k = k + 1;\r\n        }\r\n        return available;  \r\n    }\r\n    // console.log(\"Functia a returnat valoarea: \", isAvailable(rooms.roomNumbers[1]))\r\n    console.log(isAvailable(rooms.roomNumbers[1]))\r\n    // const unavailableDatesModified = []\r\n    //     for(let i = 0; i < rooms.roomNumbers[1].unavailableDates.length; i = i + 1)\r\n    //     unavailableDatesModified.push(new Date(rooms.roomNumbers[1].unavailableDates[i]).getTime() - 3*60*60*1000)\r\n\r\n    // console.log(allDates[1] === unavailableDatesModified[0])\r\n    // console.log(\"alldDates\", allDates[1])\r\n    // console.log(\"unavailableModifiedDates\", unavailableDatesModified[0])\r\n\r\n    const handleSelect = (e) => {\r\n        const checked = e.target.checked;\r\n        const value = e.target.value;\r\n        setSelectedRooms(checked ? [...selectedRooms, value] : selectedRooms.filter(item => item !== value)) \r\n    }\r\n\r\n    const handleClick = async () => {\r\n            await Promise.all(selectedRooms.map((roomId) => {\r\n               const userData = {\r\n                    roomId, form\r\n                }\r\n                dispatch(addReservation(userData))\r\n            }))\r\n        \r\n    }\r\n\r\n    if(isLoadingFo)\r\n        return <div>Loading...</div>\r\n\r\n  return (\r\n    <div className=\"reserve\">\r\n        <div className=\"rContainer\">\r\n            <FontAwesomeIcon icon={faCircleXmark} className=\"rClose\" onClick={() => setOpen(false)}/>\r\n            <span>Select your rooms:</span>\r\n        </div>\r\n        {rooms.roomNumbers.map(roomNumber => (\r\n            <div className=\"room\" key={roomNumber._id}>\r\n                <label> {roomNumber.number} </label>\r\n                <input type=\"checkbox\" value={roomNumber._id} onChange={handleSelect} \r\n                // disabled={!isAvailable(roomNumber)}\r\n                />\r\n            </div>\r\n        ))}\r\n        <button onClick={handleClick}>Reserve now!</button>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Reserve\r\n"],"mappings":";;AAAA,OAAO,eAAe;AACtB,SAAQA,KAAK,QAAO,gBAAgB;AACpC,SAAQC,eAAe,QAAO,gCAAgC;AAC9D,SAAQC,aAAa,QAAO,mCAAmC;;AAE/D;AACA,SAAQC,QAAQ,EAAEC,SAAS,QAAO,OAAO;;AAEzC;AACA,SAAQC,WAAW,EAAEC,WAAW,QAAO,aAAa;;AAEpD;AACA,SAAQC,OAAO,EAAEC,aAAa,EAAEC,cAAc,QAAO,qCAAqC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3F,SAASC,OAAOA,CAAAC,IAAA,EAAoB;EAAAC,EAAA;EAAA,IAAnB;IAACC,OAAO;IAAEC;EAAM,CAAC,GAAAH,IAAA;EAE9B,MAAM;IAACI,IAAI;IAAEC,KAAK;IAAEC,WAAW;IAAEC,WAAW;IAAEC;EAAS,CAAC,GAAGhB,WAAW,CAAEiB,KAAK,IAAKA,KAAK,CAACC,OAAO,CAAC;EAChG,MAAMC,QAAQ,GAAGlB,WAAW,EAAE;EAE9B,MAAM,CAACmB,aAAa,EAAEC,gBAAgB,CAAC,GAAGvB,QAAQ,CAAC,EAAE,CAAC;EAEtDC,SAAS,CAAC,MAAM;IACZ,IAAGgB,WAAW,IAAIC,SAAS,EACvBrB,KAAK,CAAC2B,OAAO,CAACN,SAAS,CAAC;EAChC,CAAC,EAAE,CAACG,QAAQ,EAAEJ,WAAW,EAAEC,SAAS,CAAC,CAAC;EAEtC,MAAMO,eAAe,GAAGA,CAACC,SAAS,EAAEC,OAAO,KAAK;IAC5C,MAAMC,KAAK,GAAG,IAAIC,IAAI,CAACH,SAAS,CAAC;IACjC,MAAMI,GAAG,GAAG,IAAID,IAAI,CAACF,OAAO,CAAC;IAC7B,MAAMI,IAAI,GAAG,IAAIF,IAAI,CAACD,KAAK,CAACI,OAAO,EAAE,CAAC;IACtC,IAAIC,IAAI,GAAG,EAAE;IAEb,OAAMF,IAAI,IAAID,GAAG,EAAE;MACfG,IAAI,CAACC,IAAI,CAAC,IAAIL,IAAI,CAACE,IAAI,CAAC,CAACC,OAAO,EAAE,CAAC;MACnCD,IAAI,CAACI,OAAO,CAACJ,IAAI,CAACK,OAAO,EAAE,GAAC,CAAC,CAAC;IAClC;IACA,OAAOH,IAAI;EACf,CAAC;EAED,MAAMI,QAAQ,GAAGZ,eAAe,CAACX,IAAI,CAACc,KAAK,EAAEd,IAAI,CAACgB,GAAG,CAAC;EAEtD,MAAMQ,WAAW,GAAIC,UAAU,IAAK;IAChC,MAAMC,wBAAwB,GAAG,EAAE;IACnC,KAAI,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGF,UAAU,CAACG,gBAAgB,CAACC,MAAM,EAAEF,CAAC,GAAGA,CAAC,GAAG,CAAC,EAChED,wBAAwB,CAACN,IAAI,CAAC,IAAIL,IAAI,CAACU,UAAU,CAACG,gBAAgB,CAACD,CAAC,CAAC,CAAC,CAACT,OAAO,EAAE,GAAG,CAAC,GAAC,EAAE,GAAC,EAAE,GAAC,IAAI,CAAC;IAChG;IACA,IAAIY,SAAS,GAAG,IAAI;IACpB,IAAIC,CAAC,GAAG,CAAC;IACT,IAAIC,CAAC,GAAG,CAAC;IACT,OAAOD,CAAC,GAAGR,QAAQ,CAACM,MAAM,IAAIC,SAAS,KAAK,IAAI,EAAE;MAC9C,OAAOE,CAAC,GAAGN,wBAAwB,CAACG,MAAM,IAAIC,SAAS,KAAK,IAAI,EAAE;QAC9DG,OAAO,CAACC,GAAG,CAAC,UAAU,EAAEX,QAAQ,CAACQ,CAAC,CAAC,CAAC;QACpCE,OAAO,CAACC,GAAG,CAAC,kBAAkB,EAAER,wBAAwB,CAACM,CAAC,CAAC,CAAC;QAC5D,IAAGT,QAAQ,CAACQ,CAAC,CAAC,KAAKL,wBAAwB,CAACM,CAAC,CAAC,EAAE;UAC5CF,SAAS,GAAG,KAAK;UACjB;UACA;UACA;QACJ;;QACAG,OAAO,CAACC,GAAG,CAAC,mBAAmB,EAAEJ,SAAS,CAAC;QAC3CG,OAAO,CAACC,GAAG,CAAC,EAAE,CAAC;QACfF,CAAC,GAAGA,CAAC,GAAG,CAAC;MACb;MACAD,CAAC,GAAGA,CAAC,GAAG,CAAC;IACb;IACA,OAAOD,SAAS;EACpB,CAAC;EACD;EACAG,OAAO,CAACC,GAAG,CAACV,WAAW,CAACvB,KAAK,CAACkC,WAAW,CAAC,CAAC,CAAC,CAAC,CAAC;EAC9C;EACA;EACA;;EAEA;EACA;EACA;;EAEA,MAAMC,YAAY,GAAIC,CAAC,IAAK;IACxB,MAAMC,OAAO,GAAGD,CAAC,CAACE,MAAM,CAACD,OAAO;IAChC,MAAME,KAAK,GAAGH,CAAC,CAACE,MAAM,CAACC,KAAK;IAC5B/B,gBAAgB,CAAC6B,OAAO,GAAG,CAAC,GAAG9B,aAAa,EAAEgC,KAAK,CAAC,GAAGhC,aAAa,CAACiC,MAAM,CAACC,IAAI,IAAIA,IAAI,KAAKF,KAAK,CAAC,CAAC;EACxG,CAAC;EAED,MAAMG,WAAW,GAAG,MAAAA,CAAA,KAAY;IACxB,MAAMC,OAAO,CAACC,GAAG,CAACrC,aAAa,CAACsC,GAAG,CAAE/C,MAAM,IAAK;MAC7C,MAAMgD,QAAQ,GAAG;QACZhD,MAAM;QAAEC;MACZ,CAAC;MACDO,QAAQ,CAACf,cAAc,CAACuD,QAAQ,CAAC,CAAC;IACtC,CAAC,CAAC,CAAC;EAEX,CAAC;EAED,IAAG7C,WAAW,EACV,oBAAOR,OAAA;IAAAsD,QAAA,EAAK;EAAU;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAAM;EAElC,oBACE1D,OAAA;IAAK2D,SAAS,EAAC,SAAS;IAAAL,QAAA,gBACpBtD,OAAA;MAAK2D,SAAS,EAAC,YAAY;MAAAL,QAAA,gBACvBtD,OAAA,CAACV,eAAe;QAACsE,IAAI,EAAErE,aAAc;QAACoE,SAAS,EAAC,QAAQ;QAACE,OAAO,EAAEA,CAAA,KAAMzD,OAAO,CAAC,KAAK;MAAE;QAAAmD,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAE,eACzF1D,OAAA;QAAAsD,QAAA,EAAM;MAAkB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAO;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAC7B,EACLnD,KAAK,CAACkC,WAAW,CAACW,GAAG,CAACrB,UAAU,iBAC7B/B,OAAA;MAAK2D,SAAS,EAAC,MAAM;MAAAL,QAAA,gBACjBtD,OAAA;QAAAsD,QAAA,GAAO,GAAC,EAACvB,UAAU,CAAC+B,MAAM,EAAC,GAAC;MAAA;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAQ,eACpC1D,OAAA;QAAO+D,IAAI,EAAC,UAAU;QAACjB,KAAK,EAAEf,UAAU,CAACiC,GAAI;QAACC,QAAQ,EAAEvB;QACxD;MAAA;QAAAa,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QACE;IAAA,GAJqB3B,UAAU,CAACiC,GAAG;MAAAT,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAM5C,CAAC,eACF1D,OAAA;MAAQ6D,OAAO,EAAEZ,WAAY;MAAAK,QAAA,EAAC;IAAY;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAS;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACjD;AAEV;AAACvD,EAAA,CAnGQF,OAAO;EAAA,QAE+CP,WAAW,EACrDC,WAAW;AAAA;AAAAuE,EAAA,GAHvBjE,OAAO;AAqGhB,eAAeA,OAAO;AAAA,IAAAiE,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}