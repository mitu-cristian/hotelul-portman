{"ast":null,"code":"var _jsxFileName = \"D:\\\\portman-hotel\\\\frontend\\\\src\\\\pages\\\\Me.jsx\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport { toast } from \"react-toastify\";\n\n// Redux\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { getMe, updateMe, reset } from \"../features/user/userSlice\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Me() {\n  _s();\n  const [updateUserInfo, setUpdateUserInfo] = useState(false);\n  const {\n    userMe\n  } = useSelector(state => state.user);\n  const {\n    user,\n    isLoading,\n    isError,\n    isSuccess,\n    message\n  } = useSelector(state => state.auth);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    if (isError) toast.error(message);\n    // dispatch(getMe());\n    dispatch(reset());\n  }, [message, isError, isSuccess, dispatch]);\n  const [formData, setFormData] = useState({\n    // firstname: user ? user.firstname : \"\",\n    // lastname: user ? user.lastname : \"\",\n    // email: user ? user.email : \"\"\n    firstname: \"\",\n    lastname: \"\",\n    email: \"\"\n  });\n  const {\n    firstname,\n    lastname,\n    email\n  } = formData;\n  const onChange = e => {\n    setFormData(prevState => ({\n      ...prevState,\n      [e.target.name]: e.target.value\n    }));\n  };\n  setFormData(prevState => ({\n    ...prevState,\n    firstname: \"Cristian\"\n  }));\n\n  // if(user) {\n  //   document.getElementById(\"firstname\").value = user.firstname;\n  //   document.getElementById(\"lastname\").value = user.lastname;\n  //   document.getElementById(\"email\").value = user.email;\n  // }\n\n  const onSubmit = e => {\n    e.preventDefault();\n    const userData = {\n      firstname,\n      lastname,\n      email\n    };\n    // dispatch(updateMe(userData))\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: onSubmit,\n      children: /*#__PURE__*/_jsxDEV(\"fieldset\", {\n        disabled: !updateUserInfo,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"firstname\",\n          name: \"firstname\",\n          value: firstname,\n          placeholder: \"Enter your firstname.\",\n          onChange: onChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"lastname\",\n          name: \"lastname\",\n          value: lastname,\n          placeholder: \"Enter your last name.\",\n          onChange: onChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          id: \"email\",\n          name: \"email\",\n          value: email,\n          placeholder: \"Enter your email address.\",\n          onChange: onChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this), updateUserInfo && /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          onSubmit: onSubmit,\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 30\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setUpdateUserInfo(!updateUserInfo),\n      children: updateUserInfo ? 'Cancel' : 'Update your user information'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}\n_s(Me, \"X6VIeEnTY26flcuy7MmkdoyWvx4=\", false, function () {\n  return [useSelector, useSelector, useDispatch];\n});\n_c = Me;\nexport default Me;\nvar _c;\n$RefreshReg$(_c, \"Me\");","map":{"version":3,"names":["useState","useEffect","toast","useSelector","useDispatch","getMe","updateMe","reset","jsxDEV","_jsxDEV","Fragment","_Fragment","Me","_s","updateUserInfo","setUpdateUserInfo","userMe","state","user","isLoading","isError","isSuccess","message","auth","dispatch","error","formData","setFormData","firstname","lastname","email","onChange","e","prevState","target","name","value","onSubmit","preventDefault","userData","children","disabled","type","id","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["D:/portman-hotel/frontend/src/pages/Me.jsx"],"sourcesContent":["import {useState, useEffect} from \"react\";\r\nimport {toast} from \"react-toastify\";\r\n\r\n// Redux\r\nimport {useSelector, useDispatch} from \"react-redux\";\r\nimport {getMe, updateMe, reset} from \"../features/user/userSlice\";\r\n\r\nfunction Me() {\r\n  const [updateUserInfo, setUpdateUserInfo] = useState(false)\r\n  const {userMe} = useSelector((state) => state.user)\r\n  const {user, isLoading, isError, isSuccess, message} = useSelector((state) => state.auth)\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    if(isError) \r\n      toast.error(message);\r\n    // dispatch(getMe());\r\n    dispatch(reset())\r\n  }, [message, isError, isSuccess,dispatch]);\r\n\r\n  const [formData, setFormData] = useState({\r\n    // firstname: user ? user.firstname : \"\",\r\n    // lastname: user ? user.lastname : \"\",\r\n    // email: user ? user.email : \"\"\r\n    firstname: \"\",\r\n    lastname: \"\",\r\n    email: \"\",\r\n  })\r\n  \r\n  \r\n\r\n  const {firstname, lastname, email} = formData;\r\n  \r\n  const onChange = (e) => {\r\n    setFormData((prevState) => ({\r\n      ...prevState,\r\n      [e.target.name]: e.target.value\r\n    }))\r\n  }\r\n\r\n  setFormData((prevState) => ({\r\n    ...prevState,\r\n    firstname: \"Cristian\"\r\n  }))\r\n\r\n  // if(user) {\r\n  //   document.getElementById(\"firstname\").value = user.firstname;\r\n  //   document.getElementById(\"lastname\").value = user.lastname;\r\n  //   document.getElementById(\"email\").value = user.email;\r\n  // }\r\n\r\n\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n    const userData = {firstname, lastname, email}\r\n    // dispatch(updateMe(userData))\r\n  }\r\n\r\n\r\n  return (\r\n    <>\r\n      <form onSubmit={onSubmit}>\r\n        <fieldset disabled = {!updateUserInfo}>\r\n          <input type=\"text\" id=\"firstname\" name=\"firstname\" value={firstname} placeholder=\"Enter your firstname.\" onChange={onChange}  />\r\n          <input type=\"text\" id=\"lastname\" name=\"lastname\" value={lastname} placeholder=\"Enter your last name.\" onChange={onChange} />\r\n          <input type=\"email\" id=\"email\" name=\"email\" value={email} placeholder=\"Enter your email address.\" onChange={onChange} />\r\n          {updateUserInfo && <button type=\"submit\" onSubmit={onSubmit}>Submit</button>}\r\n        </fieldset>\r\n      </form>\r\n        <button onClick = {() => setUpdateUserInfo(!updateUserInfo)}>\r\n          {updateUserInfo ? 'Cancel' : 'Update your user information'}\r\n        </button>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Me\r\n"],"mappings":";;AAAA,SAAQA,QAAQ,EAAEC,SAAS,QAAO,OAAO;AACzC,SAAQC,KAAK,QAAO,gBAAgB;;AAEpC;AACA,SAAQC,WAAW,EAAEC,WAAW,QAAO,aAAa;AACpD,SAAQC,KAAK,EAAEC,QAAQ,EAAEC,KAAK,QAAO,4BAA4B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAElE,SAASC,EAAEA,CAAA,EAAG;EAAAC,EAAA;EACZ,MAAM,CAACC,cAAc,EAAEC,iBAAiB,CAAC,GAAGf,QAAQ,CAAC,KAAK,CAAC;EAC3D,MAAM;IAACgB;EAAM,CAAC,GAAGb,WAAW,CAAEc,KAAK,IAAKA,KAAK,CAACC,IAAI,CAAC;EACnD,MAAM;IAACA,IAAI;IAAEC,SAAS;IAAEC,OAAO;IAAEC,SAAS;IAAEC;EAAO,CAAC,GAAGnB,WAAW,CAAEc,KAAK,IAAKA,KAAK,CAACM,IAAI,CAAC;EAEzF,MAAMC,QAAQ,GAAGpB,WAAW,EAAE;EAE9BH,SAAS,CAAC,MAAM;IACd,IAAGmB,OAAO,EACRlB,KAAK,CAACuB,KAAK,CAACH,OAAO,CAAC;IACtB;IACAE,QAAQ,CAACjB,KAAK,EAAE,CAAC;EACnB,CAAC,EAAE,CAACe,OAAO,EAAEF,OAAO,EAAEC,SAAS,EAACG,QAAQ,CAAC,CAAC;EAE1C,MAAM,CAACE,QAAQ,EAAEC,WAAW,CAAC,GAAG3B,QAAQ,CAAC;IACvC;IACA;IACA;IACA4B,SAAS,EAAE,EAAE;IACbC,QAAQ,EAAE,EAAE;IACZC,KAAK,EAAE;EACT,CAAC,CAAC;EAIF,MAAM;IAACF,SAAS;IAAEC,QAAQ;IAAEC;EAAK,CAAC,GAAGJ,QAAQ;EAE7C,MAAMK,QAAQ,GAAIC,CAAC,IAAK;IACtBL,WAAW,CAAEM,SAAS,KAAM;MAC1B,GAAGA,SAAS;MACZ,CAACD,CAAC,CAACE,MAAM,CAACC,IAAI,GAAGH,CAAC,CAACE,MAAM,CAACE;IAC5B,CAAC,CAAC,CAAC;EACL,CAAC;EAEDT,WAAW,CAAEM,SAAS,KAAM;IAC1B,GAAGA,SAAS;IACZL,SAAS,EAAE;EACb,CAAC,CAAC,CAAC;;EAEH;EACA;EACA;EACA;EACA;;EAGA,MAAMS,QAAQ,GAAIL,CAAC,IAAK;IACtBA,CAAC,CAACM,cAAc,EAAE;IAClB,MAAMC,QAAQ,GAAG;MAACX,SAAS;MAAEC,QAAQ;MAAEC;IAAK,CAAC;IAC7C;EACF,CAAC;;EAGD,oBACErB,OAAA,CAAAE,SAAA;IAAA6B,QAAA,gBACE/B,OAAA;MAAM4B,QAAQ,EAAEA,QAAS;MAAAG,QAAA,eACvB/B,OAAA;QAAUgC,QAAQ,EAAI,CAAC3B,cAAe;QAAA0B,QAAA,gBACpC/B,OAAA;UAAOiC,IAAI,EAAC,MAAM;UAACC,EAAE,EAAC,WAAW;UAACR,IAAI,EAAC,WAAW;UAACC,KAAK,EAAER,SAAU;UAACgB,WAAW,EAAC,uBAAuB;UAACb,QAAQ,EAAEA;QAAS;UAAAc,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAI,eAChIvC,OAAA;UAAOiC,IAAI,EAAC,MAAM;UAACC,EAAE,EAAC,UAAU;UAACR,IAAI,EAAC,UAAU;UAACC,KAAK,EAAEP,QAAS;UAACe,WAAW,EAAC,uBAAuB;UAACb,QAAQ,EAAEA;QAAS;UAAAc,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAG,eAC5HvC,OAAA;UAAOiC,IAAI,EAAC,OAAO;UAACC,EAAE,EAAC,OAAO;UAACR,IAAI,EAAC,OAAO;UAACC,KAAK,EAAEN,KAAM;UAACc,WAAW,EAAC,2BAA2B;UAACb,QAAQ,EAAEA;QAAS;UAAAc,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAG,EACvHlC,cAAc,iBAAIL,OAAA;UAAQiC,IAAI,EAAC,QAAQ;UAACL,QAAQ,EAAEA,QAAS;UAAAG,QAAA,EAAC;QAAM;UAAAK,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAS;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IACnE;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACN,eACLvC,OAAA;MAAQwC,OAAO,EAAIA,CAAA,KAAMlC,iBAAiB,CAAC,CAACD,cAAc,CAAE;MAAA0B,QAAA,EACzD1B,cAAc,GAAG,QAAQ,GAAG;IAA8B;MAAA+B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACpD;EAAA,gBACV;AAEP;AAACnC,EAAA,CApEQD,EAAE;EAAA,QAEQT,WAAW,EAC2BA,WAAW,EAEjDC,WAAW;AAAA;AAAA8C,EAAA,GALrBtC,EAAE;AAsEX,eAAeA,EAAE;AAAA,IAAAsC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}