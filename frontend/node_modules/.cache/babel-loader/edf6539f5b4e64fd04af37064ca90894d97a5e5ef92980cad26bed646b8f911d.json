{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport { useSelector } from \"react-redux\";\nexport const useAuthStatus = () => {\n  _s();\n  const [loggedIn, setLoggedIn] = useState(false);\n  const [checkingStatus, setCheckingStatus] = useState(true);\n  const {\n    user\n  } = useSelector(state => state.auth);\n  useEffect(() => {\n    if (user) setLoggedIn(true);else setLoggedIn(false);\n    setCheckingStatus(false);\n  }, [user]);\n  return {\n    loggedIn,\n    checkingStatus\n  };\n};\n_s(useAuthStatus, \"PfvY4cu9Gi6xRo+mVxHDm/wyICo=\", false, function () {\n  return [useSelector];\n});","map":{"version":3,"names":["useState","useEffect","useSelector","useAuthStatus","_s","loggedIn","setLoggedIn","checkingStatus","setCheckingStatus","user","state","auth"],"sources":["D:/Portman Hotel copy/frontend/src/hooks/useAuthStatus.js"],"sourcesContent":["import {useState, useEffect} from \"react\";\r\nimport {useSelector} from \"react-redux\";\r\n\r\nexport const useAuthStatus = () => {\r\n    const [loggedIn, setLoggedIn] = useState(false);\r\n    const [checkingStatus, setCheckingStatus] = useState(true);\r\n\r\n    const {user} = useSelector((state) => state.auth);\r\n\r\n    useEffect(() => {\r\n        if(user)\r\n            setLoggedIn(true);\r\n        else    \r\n            setLoggedIn(false);\r\n        setCheckingStatus(false);\r\n    }, [user])\r\n\r\n    return {loggedIn, checkingStatus};\r\n}"],"mappings":";AAAA,SAAQA,QAAQ,EAAEC,SAAS,QAAO,OAAO;AACzC,SAAQC,WAAW,QAAO,aAAa;AAEvC,OAAO,MAAMC,aAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC/B,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGN,QAAQ,CAAC,KAAK,CAAC;EAC/C,MAAM,CAACO,cAAc,EAAEC,iBAAiB,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC;EAE1D,MAAM;IAACS;EAAI,CAAC,GAAGP,WAAW,CAAEQ,KAAK,IAAKA,KAAK,CAACC,IAAI,CAAC;EAEjDV,SAAS,CAAC,MAAM;IACZ,IAAGQ,IAAI,EACHH,WAAW,CAAC,IAAI,CAAC,CAAC,KAElBA,WAAW,CAAC,KAAK,CAAC;IACtBE,iBAAiB,CAAC,KAAK,CAAC;EAC5B,CAAC,EAAE,CAACC,IAAI,CAAC,CAAC;EAEV,OAAO;IAACJ,QAAQ;IAAEE;EAAc,CAAC;AACrC,CAAC;AAAAH,EAAA,CAfYD,aAAa;EAAA,QAIPD,WAAW;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}