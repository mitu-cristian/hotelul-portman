{"ast":null,"code":"import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport reservationService from \"./reservationService\";\nconst initialState = {\n  reservations: null,\n  isErrorRe: false,\n  isSuccessRe: false,\n  isLoadingRe: false,\n  messageRe: \"\"\n};\n\n// See my reservations\nexport const getMyReservations = createAsyncThunk(\"reservation/getMyReservations\", async thunkAPI => {\n  try {\n    return await reservationService.getMyReservations();\n  } catch (error) {\n    const message = error.response.data.error || error.response && error.response.data && error.response.data.message || error.message || error.toString();\n    return thunkAPI.rejectWithValue(message);\n  }\n});\n\n// Cancel my reservation\nexport const cancelMyReservation = createAsyncThunk(\"reservations/cancelMyReservation\", async (thunkAPI, reservationId) => {\n  console.log(reservationId);\n  try {\n    return await reservationService.cancelMyReservation(reservationId);\n  } catch (error) {\n    const message = error.response.data.error || error.response && error.response.data && error.response.data.message || error.message || error.toString();\n    return thunkAPI.rejectWithValue(message);\n  }\n});\nexport const reservationSlice = createSlice({\n  name: \"reservation\",\n  initialState,\n  reducers: {\n    resetRe: state => {\n      state.isErrorRe = false;\n      state.isSuccessRe = false;\n      state.isLoadingRe = false;\n      state.messageRe = \"\";\n    }\n  },\n  extraReducers: builder => {\n    builder\n\n    // See my reservations\n    .addCase(getMyReservations.pending, state => {\n      state.isLoadingRe = true;\n    }).addCase(getMyReservations.fulfilled, (state, action) => {\n      state.isLoadingRe = false;\n      state.reservations = action.payload;\n    })\n\n    // Cancel my reservation\n    .addCase(cancelMyReservation.pending, state => {\n      state.isLoadingRe = true;\n    }).addCase(cancelMyReservation.fulfilled, (state, action) => {\n      state.isLoadingRe = false;\n      state.isSuccessRe = true;\n      state.messageRe = \"The reservation has been successfuly deleted\";\n      state.reservations = state.reservations.map(reservation => {\n        if (reservation._id === action.payload) reservation.status = \"canceled\";\n      });\n    }).addCase(cancelMyReservation.rejected, (state, action) => {\n      state.isLoadingRe = false;\n      state.isErrorRe = true;\n      state.messageRe = \"The cancelation of the reservation couldn't be fulfilled.\";\n    });\n  }\n});\nexport const {\n  resetRe\n} = reservationSlice.actions;\nexport default reservationSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","reservationService","initialState","reservations","isErrorRe","isSuccessRe","isLoadingRe","messageRe","getMyReservations","thunkAPI","error","message","response","data","toString","rejectWithValue","cancelMyReservation","reservationId","console","log","reservationSlice","name","reducers","resetRe","state","extraReducers","builder","addCase","pending","fulfilled","action","payload","map","reservation","_id","status","rejected","actions","reducer"],"sources":["D:/portman-hotel/frontend/src/features/reservation/reservationSlice.js"],"sourcesContent":["import {createSlice, createAsyncThunk} from \"@reduxjs/toolkit\";\r\nimport reservationService from \"./reservationService\";\r\n\r\nconst initialState = {\r\n    reservations: null,\r\n    isErrorRe: false,\r\n    isSuccessRe: false,\r\n    isLoadingRe: false,\r\n    messageRe: \"\"\r\n}\r\n\r\n// See my reservations\r\nexport const getMyReservations = createAsyncThunk(\"reservation/getMyReservations\", async (thunkAPI) => {\r\n    try {\r\n        return await reservationService.getMyReservations();\r\n    }\r\n    catch(error) {\r\n        const message = error.response.data.error || (error.response && error.response.data && error.response.data.message) || error.message || error.toString();\r\n        return thunkAPI.rejectWithValue(message);\r\n    }\r\n})\r\n\r\n// Cancel my reservation\r\nexport const cancelMyReservation = createAsyncThunk(\"reservations/cancelMyReservation\", async (thunkAPI, reservationId) => {\r\n    console.log(reservationId)\r\n    try {\r\n        return await reservationService.cancelMyReservation(reservationId);\r\n    }\r\n    catch(error) {\r\n        const message = error.response.data.error || (error.response && error.response.data && error.response.data.message) || error.message || error.toString();\r\n        return thunkAPI.rejectWithValue(message);\r\n    }\r\n})\r\n\r\nexport const reservationSlice = createSlice({\r\n    name: \"reservation\",\r\n    initialState,\r\n    reducers: {\r\n        resetRe: (state) => {\r\n            state.isErrorRe = false;\r\n            state.isSuccessRe = false;\r\n            state.isLoadingRe = false;\r\n            state.messageRe = \"\"\r\n        }\r\n    },\r\n    extraReducers: (builder) => {\r\n        builder\r\n        \r\n    // See my reservations\r\n            .addCase(getMyReservations.pending, (state) => {\r\n                state.isLoadingRe = true;\r\n            })\r\n            .addCase(getMyReservations.fulfilled, (state, action) => {\r\n                state.isLoadingRe = false;\r\n                state.reservations = action.payload;\r\n            })\r\n\r\n    // Cancel my reservation\r\n            .addCase(cancelMyReservation.pending, (state) => {\r\n                state.isLoadingRe = true;\r\n            })\r\n            .addCase(cancelMyReservation.fulfilled, (state, action) => {\r\n                state.isLoadingRe = false;\r\n                state.isSuccessRe = true;\r\n                state.messageRe = \"The reservation has been successfuly deleted\";\r\n                state.reservations = state.reservations.map((reservation) => {\r\n                    if(reservation._id === action.payload)\r\n                        reservation.status = \"canceled\"\r\n                })\r\n            })\r\n            .addCase(cancelMyReservation.rejected, (state, action) => {\r\n                state.isLoadingRe = false;\r\n                state.isErrorRe = true;\r\n                state.messageRe = \"The cancelation of the reservation couldn't be fulfilled.\";\r\n            })\r\n    }\r\n})\r\n\r\nexport const {resetRe} = reservationSlice.actions;\r\nexport default reservationSlice.reducer;"],"mappings":"AAAA,SAAQA,WAAW,EAAEC,gBAAgB,QAAO,kBAAkB;AAC9D,OAAOC,kBAAkB,MAAM,sBAAsB;AAErD,MAAMC,YAAY,GAAG;EACjBC,YAAY,EAAE,IAAI;EAClBC,SAAS,EAAE,KAAK;EAChBC,WAAW,EAAE,KAAK;EAClBC,WAAW,EAAE,KAAK;EAClBC,SAAS,EAAE;AACf,CAAC;;AAED;AACA,OAAO,MAAMC,iBAAiB,GAAGR,gBAAgB,CAAC,+BAA+B,EAAE,MAAOS,QAAQ,IAAK;EACnG,IAAI;IACA,OAAO,MAAMR,kBAAkB,CAACO,iBAAiB,EAAE;EACvD,CAAC,CACD,OAAME,KAAK,EAAE;IACT,MAAMC,OAAO,GAAGD,KAAK,CAACE,QAAQ,CAACC,IAAI,CAACH,KAAK,IAAKA,KAAK,CAACE,QAAQ,IAAIF,KAAK,CAACE,QAAQ,CAACC,IAAI,IAAIH,KAAK,CAACE,QAAQ,CAACC,IAAI,CAACF,OAAQ,IAAID,KAAK,CAACC,OAAO,IAAID,KAAK,CAACI,QAAQ,EAAE;IACxJ,OAAOL,QAAQ,CAACM,eAAe,CAACJ,OAAO,CAAC;EAC5C;AACJ,CAAC,CAAC;;AAEF;AACA,OAAO,MAAMK,mBAAmB,GAAGhB,gBAAgB,CAAC,kCAAkC,EAAE,OAAOS,QAAQ,EAAEQ,aAAa,KAAK;EACvHC,OAAO,CAACC,GAAG,CAACF,aAAa,CAAC;EAC1B,IAAI;IACA,OAAO,MAAMhB,kBAAkB,CAACe,mBAAmB,CAACC,aAAa,CAAC;EACtE,CAAC,CACD,OAAMP,KAAK,EAAE;IACT,MAAMC,OAAO,GAAGD,KAAK,CAACE,QAAQ,CAACC,IAAI,CAACH,KAAK,IAAKA,KAAK,CAACE,QAAQ,IAAIF,KAAK,CAACE,QAAQ,CAACC,IAAI,IAAIH,KAAK,CAACE,QAAQ,CAACC,IAAI,CAACF,OAAQ,IAAID,KAAK,CAACC,OAAO,IAAID,KAAK,CAACI,QAAQ,EAAE;IACxJ,OAAOL,QAAQ,CAACM,eAAe,CAACJ,OAAO,CAAC;EAC5C;AACJ,CAAC,CAAC;AAEF,OAAO,MAAMS,gBAAgB,GAAGrB,WAAW,CAAC;EACxCsB,IAAI,EAAE,aAAa;EACnBnB,YAAY;EACZoB,QAAQ,EAAE;IACNC,OAAO,EAAGC,KAAK,IAAK;MAChBA,KAAK,CAACpB,SAAS,GAAG,KAAK;MACvBoB,KAAK,CAACnB,WAAW,GAAG,KAAK;MACzBmB,KAAK,CAAClB,WAAW,GAAG,KAAK;MACzBkB,KAAK,CAACjB,SAAS,GAAG,EAAE;IACxB;EACJ,CAAC;EACDkB,aAAa,EAAGC,OAAO,IAAK;IACxBA;;IAEJ;IAAA,CACSC,OAAO,CAACnB,iBAAiB,CAACoB,OAAO,EAAGJ,KAAK,IAAK;MAC3CA,KAAK,CAAClB,WAAW,GAAG,IAAI;IAC5B,CAAC,CAAC,CACDqB,OAAO,CAACnB,iBAAiB,CAACqB,SAAS,EAAE,CAACL,KAAK,EAAEM,MAAM,KAAK;MACrDN,KAAK,CAAClB,WAAW,GAAG,KAAK;MACzBkB,KAAK,CAACrB,YAAY,GAAG2B,MAAM,CAACC,OAAO;IACvC,CAAC;;IAET;IAAA,CACSJ,OAAO,CAACX,mBAAmB,CAACY,OAAO,EAAGJ,KAAK,IAAK;MAC7CA,KAAK,CAAClB,WAAW,GAAG,IAAI;IAC5B,CAAC,CAAC,CACDqB,OAAO,CAACX,mBAAmB,CAACa,SAAS,EAAE,CAACL,KAAK,EAAEM,MAAM,KAAK;MACvDN,KAAK,CAAClB,WAAW,GAAG,KAAK;MACzBkB,KAAK,CAACnB,WAAW,GAAG,IAAI;MACxBmB,KAAK,CAACjB,SAAS,GAAG,8CAA8C;MAChEiB,KAAK,CAACrB,YAAY,GAAGqB,KAAK,CAACrB,YAAY,CAAC6B,GAAG,CAAEC,WAAW,IAAK;QACzD,IAAGA,WAAW,CAACC,GAAG,KAAKJ,MAAM,CAACC,OAAO,EACjCE,WAAW,CAACE,MAAM,GAAG,UAAU;MACvC,CAAC,CAAC;IACN,CAAC,CAAC,CACDR,OAAO,CAACX,mBAAmB,CAACoB,QAAQ,EAAE,CAACZ,KAAK,EAAEM,MAAM,KAAK;MACtDN,KAAK,CAAClB,WAAW,GAAG,KAAK;MACzBkB,KAAK,CAACpB,SAAS,GAAG,IAAI;MACtBoB,KAAK,CAACjB,SAAS,GAAG,2DAA2D;IACjF,CAAC,CAAC;EACV;AACJ,CAAC,CAAC;AAEF,OAAO,MAAM;EAACgB;AAAO,CAAC,GAAGH,gBAAgB,CAACiB,OAAO;AACjD,eAAejB,gBAAgB,CAACkB,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}