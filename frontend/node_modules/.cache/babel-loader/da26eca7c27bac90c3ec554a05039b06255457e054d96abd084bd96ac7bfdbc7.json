{"ast":null,"code":"import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport bookingService from \"./bookingService\";\nconst adults = JSON.parse(localStorage.getItem(\"adults\"));\nconst children = JSON.parse(localStorage.getItem(\"children\"));\nconst startDate = JSON.parse(localStorage.getItem(\"startDate\"));\nconst endDate = JSON.parse(localStorage.getItem(\"endDate\"));\nconst initialState = {\n  form: adults != null && children != null && startDate != null && endDate != null ? {\n    \"adults\": adults,\n    \"children\": children,\n    \"start\": startDate,\n    \"end\": endDate\n  } : null,\n  isLoadingFo: false,\n  isSuccessFo: false,\n  result: null,\n  rooms: null\n};\n\n// Check user criteria\nexport const checkUserCriteria = createAsyncThunk(\"booking/checkUserCriteria\", async (userData, thunkAPI) => {\n  try {\n    return await bookingService.checkUserCriteria(userData);\n  } catch (error) {\n    const message = error.response.data.error || error.response && error.response.data && error.response.data.message || error.message || error.toString();\n    return thunkAPI.rejectWithValue(message);\n  }\n});\n\n// Get a single room\nexport const getSingleRoom = createAsyncThunk(\"booking/getSingleRoom\", async (roomId, thunkAPI) => {\n  try {\n    return await bookingService.getSingleRoom(roomId);\n  } catch (error) {\n    const message = error.response.data.error || error.response && error.response.data && error.response.data.message || error.message || error.toString();\n    return thunkAPI.rejectWithValue(message);\n  }\n});\nexport const bookingSlice = createSlice({\n  name: \"booking\",\n  initialState,\n  reducers: {\n    resetFo: state => {\n      state.isLoadingFo = false;\n      state.isSuccessFo = false;\n    },\n    resetFoResult: state => {\n      state.result = null;\n    }\n  },\n  extraReducers: builder => {\n    builder\n    // Check user criteria\n    .addCase(checkUserCriteria.pending, state => {\n      state.isLoadingFo = true;\n    }).addCase(checkUserCriteria.fulfilled, (state, action) => {\n      state.isSuccessFo = true;\n      state.isLoadingFo = false;\n      state.result = action.payload;\n    })\n\n    // Get single room\n    .addCase(getSingleRoom.pending, state => {\n      state.isLoadingFo = true;\n    }).addCase(getSingleRoom.fulfilled, (state, action) => {\n      state.isSuccessFo = true;\n      state.isLoadingFo = true;\n      state.rooms = action.payload;\n    });\n  }\n});\nexport const {\n  resetFo,\n  resetFoResult\n} = bookingSlice.actions;\nexport default bookingSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","bookingService","adults","JSON","parse","localStorage","getItem","children","startDate","endDate","initialState","form","isLoadingFo","isSuccessFo","result","rooms","checkUserCriteria","userData","thunkAPI","error","message","response","data","toString","rejectWithValue","getSingleRoom","roomId","bookingSlice","name","reducers","resetFo","state","resetFoResult","extraReducers","builder","addCase","pending","fulfilled","action","payload","actions","reducer"],"sources":["D:/portman-hotel/frontend/src/features/booking/bookingSlice.js"],"sourcesContent":["import {createSlice, createAsyncThunk} from \"@reduxjs/toolkit\";\r\nimport bookingService from \"./bookingService\";\r\n\r\nconst adults = JSON.parse(localStorage.getItem(\"adults\"));\r\nconst children = JSON.parse(localStorage.getItem(\"children\"));\r\nconst startDate = JSON.parse(localStorage.getItem(\"startDate\"));\r\nconst endDate = JSON.parse(localStorage.getItem(\"endDate\"))\r\n\r\nconst initialState = {\r\n    form: (adults != null && children != null && startDate != null && endDate != null) ? {\r\n        \"adults\": adults,\r\n        \"children\": children,\r\n        \"start\": startDate,\r\n        \"end\": endDate\r\n    } : null,\r\n    isLoadingFo: false,\r\n    isSuccessFo: false,\r\n    result: null,\r\n    rooms: null\r\n}\r\n\r\n// Check user criteria\r\nexport const checkUserCriteria = createAsyncThunk(\"booking/checkUserCriteria\", async(userData, thunkAPI) => {\r\n    try {\r\n        return await bookingService.checkUserCriteria(userData);\r\n    }\r\n    catch (error) {\r\n        const message = error.response.data.error || (error.response && error.response.data && error.response.data.message) || error.message || error.toString()\r\n        return thunkAPI.rejectWithValue(message);\r\n    }\r\n})\r\n\r\n// Get a single room\r\nexport const getSingleRoom = createAsyncThunk(\"booking/getSingleRoom\", async(roomId, thunkAPI) => {\r\n    try {\r\n        return await bookingService.getSingleRoom(roomId)\r\n    }\r\n    catch(error) {\r\n        const message = error.response.data.error || (error.response && error.response.data && error.response.data.message) || error.message || error.toString()\r\n        return thunkAPI.rejectWithValue(message);\r\n    }\r\n})\r\n\r\nexport const bookingSlice = createSlice({\r\n    name: \"booking\",\r\n    initialState, \r\n    reducers: {\r\n        resetFo: (state) => {\r\n            state.isLoadingFo = false;\r\n            state.isSuccessFo = false;\r\n        },\r\n        resetFoResult: (state) => {\r\n            state.result = null;\r\n        }\r\n    },\r\n    extraReducers: (builder) => {\r\n        builder\r\n// Check user criteria\r\n            .addCase(checkUserCriteria.pending, (state) => {\r\n                state.isLoadingFo = true;\r\n            })\r\n            .addCase(checkUserCriteria.fulfilled, (state, action) => {\r\n                state.isSuccessFo = true;\r\n                state.isLoadingFo = false;\r\n                state.result = action.payload;\r\n            })\r\n\r\n// Get single room\r\n            .addCase(getSingleRoom.pending, (state) => {\r\n                state.isLoadingFo = true;\r\n            })\r\n            .addCase(getSingleRoom.fulfilled, (state, action) => {\r\n                state.isSuccessFo = true;\r\n                state.isLoadingFo = true;\r\n                state.rooms = action.payload;\r\n            })\r\n    }\r\n})\r\n\r\nexport const {resetFo, resetFoResult} = bookingSlice.actions;\r\nexport default bookingSlice.reducer;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}